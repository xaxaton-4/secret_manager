services:
  postgres:
      image: postgres:15
      environment:
        POSTGRES_USER: ${DATABASE_USER}
        POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
        POSTGRES_DB: ${DATABASE_NAME}
      ports:
        - "5432:5432"
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
        interval: 5s
        timeout: 5s
        retries: 5
      volumes:
        - pgdata:/var/lib/postgresql/data
      networks:
        - default
  openbao:
    image: quay.io/openbao/openbao:2.1.0
    container_name: openbao
    cap_add:
      - IPC_LOCK
    ports:
      - "8200:8200"
      - "8201:8201"
    volumes:
      - ./openbao/data:/openbao/file
      - ./openbao/logs:/openbao/logs
      - ./openbao/policies:/openbao/policies
    environment:
      - BAO_API_ADDR=${OPENBAO_URL}
    command: server -dev -dev-root-token-id=${OPENBAO_TOKEN}
    restart: unless-stopped
    networks:
        - default
  core:
    command: >
      bash -c "python3 manage.py migrate && python manage.py setup_test_data && python3 manage.py runserver 0.0.0.0:5000"
    build: ./backend/core
    container_name: core
    environment:
      - DEBUG=${DEBUG}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - OPENBAO_URL=${OPENBAO_URL}
      - OPENBAO_TOKEN=${ROOT_TOKEN}
      - BAO_TOKEN_FILE=${BAO_TOKEN_FILE}
      - EMAIL_SENDER=${EMAIL_SENDER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - PORT=5000
    volumes:
      - ./openbao/data:/openbao/file
    ports:
      - "5000:5000"
    depends_on:
      openbao:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - default
  notify:
    command: >
      bash -c "python3 run.py"
    build: ./backend/notify_service
    container_name: notify
    depends_on:
      - core
    environment:
      - PORT=5001
    ports:
      - "5001:5001"
    networks:
      - default
  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}
        VITE_WEB_SOCKET_URL: ${VITE_WEB_SOCKET_URL}
        VITE_KEYCLOAK_URL: ${VITE_KEYCLOAK_URL}
        VITE_KEYCLOAK_REALM: ${VITE_KEYCLOAK_REALM}
        VITE_KEYCLOAK_CLIENT_ID: ${VITE_KEYCLOAK_CLIENT_ID}
    container_name: admin
    ports:
      - "80:80"
    depends_on:
      - core
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VITE_WEB_SOCKET_URL=${VITE_WEB_SOCKET_URL}
      - VITE_KEYCLOAK_URL=${VITE_KEYCLOAK_URL}
      - VITE_KEYCLOAK_REALM=${VITE_KEYCLOAK_REALM}
      - VITE_KEYCLOAK_CLIENT_ID=${VITE_KEYCLOAK_CLIENT_ID}
    networks:
      - default
  keycloak:
    image: quay.io/keycloak/keycloak:21.1
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command: start-dev
    ports:
      - "8081:8080"
    networks:
      - default
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6380:6379"
    volumes:
      - ./redisdata:/data

volumes:
  pgdata:

networks:
  default:
